<Project Sdk="Microsoft.NET.Sdk">

	<!-- Branding information -->
	<PropertyGroup>
		<Branding>Eigenverft</Branding>
	</PropertyGroup>

	<!-- General build settings: defines the output type and target frameworks -->
	<PropertyGroup>
		<OutputType>Exe</OutputType>
		<TargetFramework>net8.0</TargetFramework>
		<TargetFrameworks>net8.0;net9.0</TargetFrameworks>
		<SuppressTfmSupportBuildWarnings>true</SuppressTfmSupportBuildWarnings>
		<CheckEolTargetFramework>false</CheckEolTargetFramework>
		<InvariantGlobalization>true</InvariantGlobalization>
	</PropertyGroup>

	<!-- Packaging and publish configuration -->
	<PropertyGroup>
		<IsPackable>true</IsPackable>
		<IsPublishable>true</IsPublishable>
		<IsTestProject>false</IsTestProject>
		<PackAsTool>true</PackAsTool>
	</PropertyGroup>

	<!-- Versioning details -->
	<PropertyGroup>
		<VersionBuild>0</VersionBuild>
		<VersionMajor>1</VersionMajor>
		<VersionMinor>0</VersionMinor>
		<VersionRevision>0</VersionRevision>
		<AssemblyVersion>$(VersionBuild).$(VersionMajor).$(VersionMinor).$(VersionRevision)</AssemblyVersion>
		<Version>$(VersionBuild).$(VersionMajor).$(VersionMinor).$(VersionRevision)$(VersionSuffix)</Version>
	</PropertyGroup>

	<!-- C# language features and debugging configuration -->
	<PropertyGroup>
		<ImplicitUsings>disable</ImplicitUsings>
		<Nullable>enable</Nullable>
		<DebugType>embedded</DebugType>
		<LangVersion>latest</LangVersion>
	</PropertyGroup>

	<!-- C# language features and debugging configuration -->
	<PropertyGroup>
		<ImplicitUsings>disable</ImplicitUsings>
		<Nullable>enable</Nullable>
		<DebugType>embedded</DebugType>
		<LangVersion>latest</LangVersion>
	</PropertyGroup>

	<!-- Company and copyright information -->
	<PropertyGroup>
		<Copyright>Copyright (c) 2025 $(Branding)</Copyright>
		<Company></Company>
	</PropertyGroup>

	<PropertyGroup Condition="'$(PackAsTool)' == 'true' ">
		<ToolCommandName>drydock</ToolCommandName>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Stage)' == 'pack'">
		<Authors>$(Branding)</Authors>
		<Owners>$(Branding)</Owners>
		<PackageId>$(AssemblyName)</PackageId>
		<PackageTags>$(Branding);dotnet;tool;drydock</PackageTags>
		<PackageProjectUrl>https://github.com/eigenverft/Eigenverft.Distributed.Drydock</PackageProjectUrl>
		<RepositoryUrl>https://github.com/eigenverft/Eigenverft.Distributed.Drydock</RepositoryUrl>
		<RepositoryType>git</RepositoryType>
		<Description>
			<![CDATA[
			Eigenverft.Distributed.Drydock is a multi-purpose command-line .NET tool, containing a suite of helper functionalities.
			]]>
		</Description>
		<PackageReadmeFile>Readme.md</PackageReadmeFile>
		<PackageLicenseExpression>MIT</PackageLicenseExpression>
		<PackageIcon>eigenverft-logo-v7-harbor-square_128_128.png</PackageIcon>
		<PackageReleaseNotes>$([System.IO.File]::ReadAllText("$(MSBuildThisFileDirectory)AddPackageFiles\ReleaseNotes.txt"))</PackageReleaseNotes>
	</PropertyGroup>

	<!-- In pack add additional files to the package root directory of the nuget. -->
	<ItemGroup Condition="'$(Stage)' == 'pack'">
		<None Include="$(MSBuildProjectDirectory)\AddPackageFiles\**\*" Exclude="$(MSBuildProjectDirectory)\AddPackageFiles\ReleaseNotes.txt" Pack="true" PackagePath="" />
	</ItemGroup>

	<PropertyGroup Condition="'$(Stage)' == 'publish'">
		<!-- Specify the target runtime; adjust as needed (e.g., win-x86, linux-x64) -->
		<RuntimeIdentifier>win-x64</RuntimeIdentifier>


		<SelfContained Condition="">true</SelfContained>
		<!-- Enable single-file publish -->
		<PublishSingleFile>true</PublishSingleFile>
		<!-- Enable compression to reduce the size of the single-file executable -->
		<EnableCompressionInSingleFile>true</EnableCompressionInSingleFile>
		<!-- Ensure native libraries are extracted at runtime -->
		<IncludeNativeLibrariesForSelfExtract>true</IncludeNativeLibrariesForSelfExtract>
	</PropertyGroup>

	<Target Name="PublishToolNameTo" AfterTargets="Publish" Condition="'$(PackAsTool)' == 'true' ">
		<PropertyGroup>
			<NewExeName>$(ToolCommandName).exe</NewExeName>
		</PropertyGroup>

		<!-- Locate the original exe output -->
		<ItemGroup>
			<PublishedExe Include="$(PublishDir)$(AssemblyName).exe" Condition="Exists('$(PublishDir)$(AssemblyName).exe')" />
		</ItemGroup>
		<Message Text="Renaming $(AssemblyName).exe to $(NewExeName) in $(PublishDir)" Importance="High" />
		<Move SourceFiles="@(PublishedExe)" DestinationFiles="$(PublishDir)$(NewExeName)" />
	</Target>

	<PropertyGroup>
		<DisableMSBuildAssemblyCopyCheck>true</DisableMSBuildAssemblyCopyCheck>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.Build" Version="17.11.31" />
		<PackageReference Include="Microsoft.Build.Locator" Version="1.9.1" />
		
		<PackageReference Include="Microsoft.Extensions.Hosting" Version="9.0.10" />
		<PackageReference Include="Serilog" Version="4.3.0" />
		<PackageReference Include="Serilog.Extensions.Hosting" Version="9.0.0" />
		<PackageReference Include="Serilog.Sinks.Async" Version="2.1.0" />
		<PackageReference Include="Serilog.Sinks.Console" Version="6.0.0" />
		<PackageReference Include="System.CommandLine" Version="2.0.0-beta5.25306.1" />
	</ItemGroup>

</Project>
